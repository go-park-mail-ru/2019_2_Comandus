// Code generated by protoc-gen-go. DO NOT EDIT.
// source: internal/app/general/delivery/grpc/auth_grpc/auth.proto

package auth_grpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UserID struct {
	ID                   int64    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserID) Reset()         { *m = UserID{} }
func (m *UserID) String() string { return proto.CompactTextString(m) }
func (*UserID) ProtoMessage()    {}
func (*UserID) Descriptor() ([]byte, []int) {
	return fileDescriptor_631aea365e13c528, []int{0}
}

func (m *UserID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserID.Unmarshal(m, b)
}
func (m *UserID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserID.Marshal(b, m, deterministic)
}
func (m *UserID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserID.Merge(m, src)
}
func (m *UserID) XXX_Size() int {
	return xxx_messageInfo_UserID.Size(m)
}
func (m *UserID) XXX_DiscardUnknown() {
	xxx_messageInfo_UserID.DiscardUnknown(m)
}

var xxx_messageInfo_UserID proto.InternalMessageInfo

func (m *UserID) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

type UserRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserRequest) Reset()         { *m = UserRequest{} }
func (m *UserRequest) String() string { return proto.CompactTextString(m) }
func (*UserRequest) ProtoMessage()    {}
func (*UserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_631aea365e13c528, []int{1}
}

func (m *UserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRequest.Unmarshal(m, b)
}
func (m *UserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRequest.Marshal(b, m, deterministic)
}
func (m *UserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRequest.Merge(m, src)
}
func (m *UserRequest) XXX_Size() int {
	return xxx_messageInfo_UserRequest.Size(m)
}
func (m *UserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserRequest proto.InternalMessageInfo

func (m *UserRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UserRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type User struct {
	ID                   int64    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	FirstName            string   `protobuf:"bytes,2,opt,name=FirstName,proto3" json:"FirstName,omitempty"`
	SecondName           string   `protobuf:"bytes,3,opt,name=SecondName,proto3" json:"SecondName,omitempty"`
	UserName             string   `protobuf:"bytes,4,opt,name=UserName,proto3" json:"UserName,omitempty"`
	Email                string   `protobuf:"bytes,5,opt,name=Email,proto3" json:"Email,omitempty"`
	Password             string   `protobuf:"bytes,6,opt,name=Password,proto3" json:"Password,omitempty"`
	EncryptPassword      string   `protobuf:"bytes,7,opt,name=EncryptPassword,proto3" json:"EncryptPassword,omitempty"`
	UserType             string   `protobuf:"bytes,8,opt,name=UserType,proto3" json:"UserType,omitempty"`
	FreelancerId         int64    `protobuf:"varint,9,opt,name=FreelancerId,proto3" json:"FreelancerId,omitempty"`
	HireManagerId        int64    `protobuf:"varint,10,opt,name=HireManagerId,proto3" json:"HireManagerId,omitempty"`
	CompanyId            int64    `protobuf:"varint,11,opt,name=CompanyId,proto3" json:"CompanyId,omitempty"`
	Avatar               []byte   `protobuf:"bytes,12,opt,name=Avatar,proto3" json:"Avatar,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_631aea365e13c528, []int{2}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *User) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *User) GetSecondName() string {
	if m != nil {
		return m.SecondName
	}
	return ""
}

func (m *User) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *User) GetEncryptPassword() string {
	if m != nil {
		return m.EncryptPassword
	}
	return ""
}

func (m *User) GetUserType() string {
	if m != nil {
		return m.UserType
	}
	return ""
}

func (m *User) GetFreelancerId() int64 {
	if m != nil {
		return m.FreelancerId
	}
	return 0
}

func (m *User) GetHireManagerId() int64 {
	if m != nil {
		return m.HireManagerId
	}
	return 0
}

func (m *User) GetCompanyId() int64 {
	if m != nil {
		return m.CompanyId
	}
	return 0
}

func (m *User) GetAvatar() []byte {
	if m != nil {
		return m.Avatar
	}
	return nil
}

func init() {
	proto.RegisterType((*UserID)(nil), "auth_grpc.UserID")
	proto.RegisterType((*UserRequest)(nil), "auth_grpc.UserRequest")
	proto.RegisterType((*User)(nil), "auth_grpc.User")
}

func init() {
	proto.RegisterFile("internal/app/general/delivery/grpc/auth_grpc/auth.proto", fileDescriptor_631aea365e13c528)
}

var fileDescriptor_631aea365e13c528 = []byte{
	// 368 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x92, 0x4f, 0xab, 0xda, 0x40,
	0x14, 0xc5, 0x31, 0x6a, 0x6a, 0xae, 0xb6, 0xd2, 0xa1, 0x48, 0x90, 0x52, 0x24, 0x74, 0xe1, 0x2a,
	0x81, 0x76, 0xe1, 0xb2, 0x88, 0x51, 0xcc, 0xa2, 0xa5, 0xa4, 0x7f, 0xb6, 0x65, 0x9a, 0xdc, 0xa7,
	0x81, 0x38, 0x99, 0x77, 0x33, 0xfa, 0xc8, 0x37, 0x7e, 0x1f, 0xe3, 0x31, 0x13, 0x13, 0x9f, 0xd9,
	0x79, 0x7e, 0xe7, 0xcc, 0xbd, 0xc7, 0xc9, 0xc0, 0x2a, 0x13, 0x0a, 0x49, 0xf0, 0x3c, 0xe0, 0x52,
	0x06, 0x07, 0x14, 0x48, 0x3c, 0x0f, 0x52, 0xcc, 0xb3, 0x0b, 0x52, 0x15, 0x1c, 0x48, 0x26, 0x01,
	0x3f, 0xab, 0xe3, 0xbf, 0xf6, 0x97, 0x2f, 0xa9, 0x50, 0x05, 0x73, 0x5a, 0xea, 0xb9, 0x60, 0xff,
	0x29, 0x91, 0xa2, 0x90, 0xbd, 0x03, 0x2b, 0x0a, 0xdd, 0xde, 0xa2, 0xb7, 0xec, 0xc7, 0x56, 0x14,
	0x7a, 0xdf, 0x60, 0xac, 0x9d, 0x18, 0x1f, 0xcf, 0x58, 0x2a, 0xf6, 0x01, 0x86, 0x78, 0xe2, 0x59,
	0x6e, 0x12, 0x4e, 0x5c, 0x0b, 0x36, 0x87, 0x91, 0xe4, 0x65, 0xf9, 0x54, 0x50, 0xea, 0x5a, 0xc6,
	0x68, 0xb5, 0xf7, 0x6c, 0xc1, 0x40, 0x4f, 0xe8, 0x4e, 0x66, 0x1f, 0xc1, 0xd9, 0x65, 0x54, 0xaa,
	0x1f, 0xfc, 0x84, 0xd7, 0x53, 0x37, 0xc0, 0x3e, 0x01, 0xfc, 0xc2, 0xa4, 0x10, 0xa9, 0xb1, 0xfb,
	0xc6, 0x7e, 0x45, 0xf4, 0x4a, 0x3d, 0xd5, 0xb8, 0x83, 0x7a, 0x65, 0xa3, 0x75, 0xc9, 0xad, 0x29,
	0x39, 0xac, 0x4b, 0x6e, 0x9b, 0x92, 0x3f, 0x9b, 0x92, 0x76, 0x7d, 0xa2, 0xd1, 0x6c, 0x09, 0xd3,
	0xad, 0x48, 0xa8, 0x92, 0xaa, 0x8d, 0xbc, 0x31, 0x91, 0x2e, 0x6e, 0xf6, 0xfe, 0xae, 0x24, 0xba,
	0xa3, 0xdb, 0x5e, 0xad, 0x99, 0x07, 0x93, 0x1d, 0x21, 0xe6, 0x5c, 0x24, 0x48, 0x51, 0xea, 0x3a,
	0xe6, 0xbf, 0xde, 0x31, 0xf6, 0x19, 0xde, 0xee, 0x33, 0xc2, 0xef, 0x5c, 0xf0, 0x83, 0x09, 0x81,
	0x09, 0xdd, 0x43, 0x7d, 0x37, 0x9b, 0xe2, 0x24, 0xb9, 0xa8, 0xa2, 0xd4, 0x1d, 0x9b, 0xc4, 0x0d,
	0xb0, 0x19, 0xd8, 0xeb, 0x0b, 0x57, 0x9c, 0xdc, 0xc9, 0xa2, 0xb7, 0x9c, 0xc4, 0x57, 0xf5, 0xe5,
	0x02, 0xe3, 0xf5, 0x59, 0x1d, 0xf7, 0x5c, 0xa4, 0x39, 0x12, 0xf3, 0x01, 0x36, 0x84, 0x5c, 0xa1,
	0xb9, 0xfe, 0xa9, 0xdf, 0x7e, 0x6e, 0x5f, 0x83, 0x79, 0x17, 0xb0, 0x15, 0xc0, 0x5f, 0xa4, 0xec,
	0xa1, 0x32, 0x6a, 0xd6, 0xb1, 0xaf, 0x2f, 0x60, 0xfe, 0xbe, 0xc3, 0xa3, 0xf0, 0xbf, 0x6d, 0xde,
	0xd3, 0xd7, 0x97, 0x00, 0x00, 0x00, 0xff, 0xff, 0xdf, 0x68, 0xf9, 0x41, 0x8a, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuthHandlerClient is the client API for AuthHandler service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthHandlerClient interface {
	CreateUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error)
	VerifyUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserID, error)
}

type authHandlerClient struct {
	cc *grpc.ClientConn
}

func NewAuthHandlerClient(cc *grpc.ClientConn) AuthHandlerClient {
	return &authHandlerClient{cc}
}

func (c *authHandlerClient) CreateUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/auth_grpc.AuthHandler/CreateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authHandlerClient) VerifyUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserID, error) {
	out := new(UserID)
	err := c.cc.Invoke(ctx, "/auth_grpc.AuthHandler/VerifyUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthHandlerServer is the server API for AuthHandler service.
type AuthHandlerServer interface {
	CreateUser(context.Context, *User) (*User, error)
	VerifyUser(context.Context, *UserRequest) (*UserID, error)
}

// UnimplementedAuthHandlerServer can be embedded to have forward compatible implementations.
type UnimplementedAuthHandlerServer struct {
}

func (*UnimplementedAuthHandlerServer) CreateUser(ctx context.Context, req *User) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUser not implemented")
}
func (*UnimplementedAuthHandlerServer) VerifyUser(ctx context.Context, req *UserRequest) (*UserID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerifyUser not implemented")
}

func RegisterAuthHandlerServer(s *grpc.Server, srv AuthHandlerServer) {
	s.RegisterService(&_AuthHandler_serviceDesc, srv)
}

func _AuthHandler_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthHandlerServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth_grpc.AuthHandler/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthHandlerServer).CreateUser(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthHandler_VerifyUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthHandlerServer).VerifyUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth_grpc.AuthHandler/VerifyUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthHandlerServer).VerifyUser(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuthHandler_serviceDesc = grpc.ServiceDesc{
	ServiceName: "auth_grpc.AuthHandler",
	HandlerType: (*AuthHandlerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateUser",
			Handler:    _AuthHandler_CreateUser_Handler,
		},
		{
			MethodName: "VerifyUser",
			Handler:    _AuthHandler_VerifyUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "internal/app/general/delivery/grpc/auth_grpc/auth.proto",
}
