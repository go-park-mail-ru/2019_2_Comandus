// Code generated by MockGen. DO NOT EDIT.
// Source: internal/app/clients/interfaces/authClient.go

// Package client_mocks is a generated GoMock package.
package client_mocks

import (
	auth_grpc "github.com/go-park-mail-ru/2019_2_Comandus/internal/app/general/delivery/grpc/auth_grpc"
	model "github.com/go-park-mail-ru/2019_2_Comandus/internal/model"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockAuthUser is a mock of AuthUser interface
type MockAuthUser struct {
	ctrl     *gomock.Controller
	recorder *MockAuthUserMockRecorder
}

// MockAuthUserMockRecorder is the mock recorder for MockAuthUser
type MockAuthUserMockRecorder struct {
	mock *MockAuthUser
}

// NewMockAuthUser creates a new mock instance
func NewMockAuthUser(ctrl *gomock.Controller) *MockAuthUser {
	mock := &MockAuthUser{ctrl: ctrl}
	mock.recorder = &MockAuthUserMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAuthUser) EXPECT() *MockAuthUserMockRecorder {
	return m.recorder
}

// VerifyUserOnServer mocks base method
func (m *MockAuthUser) VerifyUserOnServer(user *model.User) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VerifyUserOnServer", user)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// VerifyUserOnServer indicates an expected call of VerifyUserOnServer
func (mr *MockAuthUserMockRecorder) VerifyUserOnServer(user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifyUserOnServer", reflect.TypeOf((*MockAuthUser)(nil).VerifyUserOnServer), user)
}

// CreateUserOnServer mocks base method
func (m *MockAuthUser) CreateUserOnServer(data *model.User) (*auth_grpc.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUserOnServer", data)
	ret0, _ := ret[0].(*auth_grpc.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateUserOnServer indicates an expected call of CreateUserOnServer
func (mr *MockAuthUserMockRecorder) CreateUserOnServer(data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUserOnServer", reflect.TypeOf((*MockAuthUser)(nil).CreateUserOnServer), data)
}
