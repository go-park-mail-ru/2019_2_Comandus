// Code generated by MockGen. DO NOT EDIT.
// Source: internal/app/clients/interfaces/ClientManager.go

// Package client_mocks is a generated GoMock package.
package client_mocks

import (
	manager_grpc "github.com/go-park-mail-ru/2019_2_Comandus/internal/app/manager/delivery/grpc/manager_grpc"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockClientManager is a mock of ClientManager interface
type MockClientManager struct {
	ctrl     *gomock.Controller
	recorder *MockClientManagerMockRecorder
}

// MockClientManagerMockRecorder is the mock recorder for MockClientManager
type MockClientManagerMockRecorder struct {
	mock *MockClientManager
}

// NewMockClientManager creates a new mock instance
func NewMockClientManager(ctrl *gomock.Controller) *MockClientManager {
	mock := &MockClientManager{ctrl: ctrl}
	mock.recorder = &MockClientManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockClientManager) EXPECT() *MockClientManagerMockRecorder {
	return m.recorder
}

// CreateManagerOnServer mocks base method
func (m *MockClientManager) CreateManagerOnServer(userId, companyId int64) (*manager_grpc.Manager, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateManagerOnServer", userId, companyId)
	ret0, _ := ret[0].(*manager_grpc.Manager)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateManagerOnServer indicates an expected call of CreateManagerOnServer
func (mr *MockClientManagerMockRecorder) CreateManagerOnServer(userId, companyId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateManagerOnServer", reflect.TypeOf((*MockClientManager)(nil).CreateManagerOnServer), userId, companyId)
}

// GetManagerByUserFromServer mocks base method
func (m *MockClientManager) GetManagerByUserFromServer(id int64) (*manager_grpc.Manager, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetManagerByUserFromServer", id)
	ret0, _ := ret[0].(*manager_grpc.Manager)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetManagerByUserFromServer indicates an expected call of GetManagerByUserFromServer
func (mr *MockClientManagerMockRecorder) GetManagerByUserFromServer(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetManagerByUserFromServer", reflect.TypeOf((*MockClientManager)(nil).GetManagerByUserFromServer), id)
}

// GetManagerFromServer mocks base method
func (m *MockClientManager) GetManagerFromServer(id int64) (*manager_grpc.Manager, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetManagerFromServer", id)
	ret0, _ := ret[0].(*manager_grpc.Manager)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetManagerFromServer indicates an expected call of GetManagerFromServer
func (mr *MockClientManagerMockRecorder) GetManagerFromServer(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetManagerFromServer", reflect.TypeOf((*MockClientManager)(nil).GetManagerFromServer), id)
}
