// Code generated by protoc-gen-go. DO NOT EDIT.
// source: internal/app/freelancer/delivery/grpc/freelancer_grpc/freelancer.proto

package freelancer_grpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Freelancer struct {
	ID                   int64    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	AccountId            int64    `protobuf:"varint,2,opt,name=AccountId,proto3" json:"AccountId,omitempty"`
	Country              int64    `protobuf:"varint,3,opt,name=Country,proto3" json:"Country,omitempty"`
	City                 int64    `protobuf:"varint,4,opt,name=City,proto3" json:"City,omitempty"`
	Address              string   `protobuf:"bytes,5,opt,name=Address,proto3" json:"Address,omitempty"`
	Phone                string   `protobuf:"bytes,6,opt,name=Phone,proto3" json:"Phone,omitempty"`
	TagLine              string   `protobuf:"bytes,7,opt,name=TagLine,proto3" json:"TagLine,omitempty"`
	Overview             string   `protobuf:"bytes,8,opt,name=Overview,proto3" json:"Overview,omitempty"`
	ExperienceLevelId    int64    `protobuf:"varint,9,opt,name=ExperienceLevelId,proto3" json:"ExperienceLevelId,omitempty"`
	SpecialityId         int64    `protobuf:"varint,10,opt,name=SpecialityId,proto3" json:"SpecialityId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Freelancer) Reset()         { *m = Freelancer{} }
func (m *Freelancer) String() string { return proto.CompactTextString(m) }
func (*Freelancer) ProtoMessage()    {}
func (*Freelancer) Descriptor() ([]byte, []int) {
	return fileDescriptor_d254e95582394ec6, []int{0}
}

func (m *Freelancer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Freelancer.Unmarshal(m, b)
}
func (m *Freelancer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Freelancer.Marshal(b, m, deterministic)
}
func (m *Freelancer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Freelancer.Merge(m, src)
}
func (m *Freelancer) XXX_Size() int {
	return xxx_messageInfo_Freelancer.Size(m)
}
func (m *Freelancer) XXX_DiscardUnknown() {
	xxx_messageInfo_Freelancer.DiscardUnknown(m)
}

var xxx_messageInfo_Freelancer proto.InternalMessageInfo

func (m *Freelancer) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *Freelancer) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *Freelancer) GetCountry() int64 {
	if m != nil {
		return m.Country
	}
	return 0
}

func (m *Freelancer) GetCity() int64 {
	if m != nil {
		return m.City
	}
	return 0
}

func (m *Freelancer) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Freelancer) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Freelancer) GetTagLine() string {
	if m != nil {
		return m.TagLine
	}
	return ""
}

func (m *Freelancer) GetOverview() string {
	if m != nil {
		return m.Overview
	}
	return ""
}

func (m *Freelancer) GetExperienceLevelId() int64 {
	if m != nil {
		return m.ExperienceLevelId
	}
	return 0
}

func (m *Freelancer) GetSpecialityId() int64 {
	if m != nil {
		return m.SpecialityId
	}
	return 0
}

type FreelancerOutput struct {
	ID                   int64    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	AccountId            int64    `protobuf:"varint,2,opt,name=AccountId,proto3" json:"AccountId,omitempty"`
	Country              string   `protobuf:"bytes,3,opt,name=Country,proto3" json:"Country,omitempty"`
	City                 string   `protobuf:"bytes,4,opt,name=City,proto3" json:"City,omitempty"`
	Address              string   `protobuf:"bytes,5,opt,name=Address,proto3" json:"Address,omitempty"`
	Phone                string   `protobuf:"bytes,6,opt,name=Phone,proto3" json:"Phone,omitempty"`
	TagLine              string   `protobuf:"bytes,7,opt,name=TagLine,proto3" json:"TagLine,omitempty"`
	Overview             string   `protobuf:"bytes,8,opt,name=Overview,proto3" json:"Overview,omitempty"`
	ExperienceLevelId    int64    `protobuf:"varint,9,opt,name=ExperienceLevelId,proto3" json:"ExperienceLevelId,omitempty"`
	SpecialityId         int64    `protobuf:"varint,10,opt,name=SpecialityId,proto3" json:"SpecialityId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FreelancerOutput) Reset()         { *m = FreelancerOutput{} }
func (m *FreelancerOutput) String() string { return proto.CompactTextString(m) }
func (*FreelancerOutput) ProtoMessage()    {}
func (*FreelancerOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_d254e95582394ec6, []int{1}
}

func (m *FreelancerOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FreelancerOutput.Unmarshal(m, b)
}
func (m *FreelancerOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FreelancerOutput.Marshal(b, m, deterministic)
}
func (m *FreelancerOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FreelancerOutput.Merge(m, src)
}
func (m *FreelancerOutput) XXX_Size() int {
	return xxx_messageInfo_FreelancerOutput.Size(m)
}
func (m *FreelancerOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_FreelancerOutput.DiscardUnknown(m)
}

var xxx_messageInfo_FreelancerOutput proto.InternalMessageInfo

func (m *FreelancerOutput) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *FreelancerOutput) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *FreelancerOutput) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *FreelancerOutput) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *FreelancerOutput) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *FreelancerOutput) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *FreelancerOutput) GetTagLine() string {
	if m != nil {
		return m.TagLine
	}
	return ""
}

func (m *FreelancerOutput) GetOverview() string {
	if m != nil {
		return m.Overview
	}
	return ""
}

func (m *FreelancerOutput) GetExperienceLevelId() int64 {
	if m != nil {
		return m.ExperienceLevelId
	}
	return 0
}

func (m *FreelancerOutput) GetSpecialityId() int64 {
	if m != nil {
		return m.SpecialityId
	}
	return 0
}

type UserID struct {
	ID                   int64    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserID) Reset()         { *m = UserID{} }
func (m *UserID) String() string { return proto.CompactTextString(m) }
func (*UserID) ProtoMessage()    {}
func (*UserID) Descriptor() ([]byte, []int) {
	return fileDescriptor_d254e95582394ec6, []int{2}
}

func (m *UserID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserID.Unmarshal(m, b)
}
func (m *UserID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserID.Marshal(b, m, deterministic)
}
func (m *UserID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserID.Merge(m, src)
}
func (m *UserID) XXX_Size() int {
	return xxx_messageInfo_UserID.Size(m)
}
func (m *UserID) XXX_DiscardUnknown() {
	xxx_messageInfo_UserID.DiscardUnknown(m)
}

var xxx_messageInfo_UserID proto.InternalMessageInfo

func (m *UserID) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func init() {
	proto.RegisterType((*Freelancer)(nil), "freelancer_grpc.Freelancer")
	proto.RegisterType((*FreelancerOutput)(nil), "freelancer_grpc.FreelancerOutput")
	proto.RegisterType((*UserID)(nil), "freelancer_grpc.UserID")
}

func init() {
	proto.RegisterFile("internal/app/freelancer/delivery/grpc/freelancer_grpc/freelancer.proto", fileDescriptor_d254e95582394ec6)
}

var fileDescriptor_d254e95582394ec6 = []byte{
	// 337 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x93, 0xcb, 0x4a, 0xf3, 0x40,
	0x14, 0xc7, 0x49, 0x7a, 0xcd, 0xe1, 0xe3, 0xb3, 0x1d, 0x04, 0x87, 0xea, 0xa2, 0x74, 0xd5, 0x85,
	0x34, 0xa0, 0x4f, 0xd0, 0x8b, 0xa5, 0x81, 0x42, 0xa5, 0xea, 0x5a, 0x62, 0xe6, 0x58, 0x07, 0xc2,
	0x64, 0x38, 0x9d, 0x46, 0xf3, 0x36, 0xba, 0xf1, 0x39, 0x25, 0x53, 0x7b, 0x31, 0x75, 0xa5, 0x2b,
	0x77, 0xf3, 0xbf, 0xe4, 0x10, 0x7e, 0x9c, 0x03, 0x63, 0xa9, 0x0c, 0x92, 0x0a, 0x63, 0x3f, 0xd4,
	0xda, 0x7f, 0x24, 0xc4, 0x38, 0x54, 0x11, 0x92, 0x2f, 0x30, 0x96, 0x29, 0x52, 0xe6, 0x2f, 0x48,
	0x47, 0x7b, 0xc1, 0x7d, 0x41, 0xf7, 0x34, 0x25, 0x26, 0x61, 0x47, 0x85, 0x46, 0xe7, 0xd5, 0x05,
	0x18, 0x6f, 0x3d, 0xf6, 0x1f, 0xdc, 0x60, 0xc4, 0x9d, 0xb6, 0xd3, 0x2d, 0xcd, 0xdd, 0x60, 0xc4,
	0xce, 0xc0, 0xeb, 0x47, 0x51, 0xb2, 0x52, 0x26, 0x10, 0xdc, 0xb5, 0xf6, 0xce, 0x60, 0x1c, 0x6a,
	0xc3, 0xfc, 0x49, 0x19, 0x2f, 0xd9, 0x6c, 0x23, 0x19, 0x83, 0xf2, 0x50, 0x9a, 0x8c, 0x97, 0xad,
	0x6d, 0xdf, 0x79, 0xbb, 0x2f, 0x04, 0xe1, 0x72, 0xc9, 0x2b, 0x6d, 0xa7, 0xeb, 0xcd, 0x37, 0x92,
	0x1d, 0x43, 0xe5, 0xfa, 0x29, 0x51, 0xc8, 0xab, 0xd6, 0x5f, 0x8b, 0xbc, 0x7f, 0x1b, 0x2e, 0xa6,
	0x52, 0x21, 0xaf, 0xad, 0xfb, 0x9f, 0x92, 0xb5, 0xa0, 0x3e, 0x4b, 0x91, 0x52, 0x89, 0xcf, 0xbc,
	0x6e, 0xa3, 0xad, 0x66, 0xe7, 0xd0, 0xbc, 0x7a, 0xd1, 0x48, 0x12, 0x55, 0x84, 0x53, 0x4c, 0x31,
	0x0e, 0x04, 0xf7, 0xec, 0x6f, 0x1c, 0x06, 0xac, 0x03, 0xff, 0x6e, 0x34, 0x46, 0x32, 0x8c, 0xa5,
	0xc9, 0x02, 0xc1, 0xc1, 0x16, 0xbf, 0x78, 0x9d, 0x77, 0x17, 0x1a, 0x3b, 0x44, 0xb3, 0x95, 0xd1,
	0x2b, 0xf3, 0x3b, 0x50, 0xde, 0xf7, 0xa0, 0xbc, 0x3f, 0x0e, 0x8a, 0x43, 0xf5, 0x6e, 0x89, 0x14,
	0x8c, 0x8a, 0x74, 0x2e, 0xde, 0x1c, 0x68, 0xee, 0x10, 0x4e, 0x42, 0x25, 0x62, 0x24, 0x36, 0x81,
	0xc6, 0x90, 0x30, 0x34, 0xb8, 0xb7, 0x80, 0x27, 0xbd, 0xc2, 0x86, 0xf6, 0xd6, 0x23, 0x5b, 0xa7,
	0x07, 0xc1, 0xde, 0x57, 0x03, 0xc8, 0x2f, 0x44, 0x0c, 0xb2, 0xbc, 0xfc, 0xb3, 0x19, 0x0f, 0x55,
	0x7b, 0x21, 0x97, 0x1f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x9a, 0x1b, 0xa5, 0x1b, 0x6b, 0x03, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FreelancerHandlerClient is the client API for FreelancerHandler service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FreelancerHandlerClient interface {
	CreateFreelancer(ctx context.Context, in *UserID, opts ...grpc.CallOption) (*Freelancer, error)
	FindByUser(ctx context.Context, in *UserID, opts ...grpc.CallOption) (*Freelancer, error)
}

type freelancerHandlerClient struct {
	cc *grpc.ClientConn
}

func NewFreelancerHandlerClient(cc *grpc.ClientConn) FreelancerHandlerClient {
	return &freelancerHandlerClient{cc}
}

func (c *freelancerHandlerClient) CreateFreelancer(ctx context.Context, in *UserID, opts ...grpc.CallOption) (*Freelancer, error) {
	out := new(Freelancer)
	err := c.cc.Invoke(ctx, "/freelancer_grpc.FreelancerHandler/CreateFreelancer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *freelancerHandlerClient) FindByUser(ctx context.Context, in *UserID, opts ...grpc.CallOption) (*Freelancer, error) {
	out := new(Freelancer)
	err := c.cc.Invoke(ctx, "/freelancer_grpc.FreelancerHandler/FindByUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FreelancerHandlerServer is the server API for FreelancerHandler service.
type FreelancerHandlerServer interface {
	CreateFreelancer(context.Context, *UserID) (*Freelancer, error)
	FindByUser(context.Context, *UserID) (*Freelancer, error)
}

// UnimplementedFreelancerHandlerServer can be embedded to have forward compatible implementations.
type UnimplementedFreelancerHandlerServer struct {
}

func (*UnimplementedFreelancerHandlerServer) CreateFreelancer(ctx context.Context, req *UserID) (*Freelancer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateFreelancer not implemented")
}
func (*UnimplementedFreelancerHandlerServer) FindByUser(ctx context.Context, req *UserID) (*Freelancer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindByUser not implemented")
}

func RegisterFreelancerHandlerServer(s *grpc.Server, srv FreelancerHandlerServer) {
	s.RegisterService(&_FreelancerHandler_serviceDesc, srv)
}

func _FreelancerHandler_CreateFreelancer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FreelancerHandlerServer).CreateFreelancer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/freelancer_grpc.FreelancerHandler/CreateFreelancer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FreelancerHandlerServer).CreateFreelancer(ctx, req.(*UserID))
	}
	return interceptor(ctx, in, info, handler)
}

func _FreelancerHandler_FindByUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FreelancerHandlerServer).FindByUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/freelancer_grpc.FreelancerHandler/FindByUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FreelancerHandlerServer).FindByUser(ctx, req.(*UserID))
	}
	return interceptor(ctx, in, info, handler)
}

var _FreelancerHandler_serviceDesc = grpc.ServiceDesc{
	ServiceName: "freelancer_grpc.FreelancerHandler",
	HandlerType: (*FreelancerHandlerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateFreelancer",
			Handler:    _FreelancerHandler_CreateFreelancer_Handler,
		},
		{
			MethodName: "FindByUser",
			Handler:    _FreelancerHandler_FindByUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "internal/app/freelancer/delivery/grpc/freelancer_grpc/freelancer.proto",
}
